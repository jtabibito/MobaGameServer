// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game.proto

#ifndef PROTOBUF_game_2eproto__INCLUDED
#define PROTOBUF_game_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_game_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[7];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsLoginResImpl();
void InitDefaultsLoginRes();
void InitDefaultsExitResImpl();
void InitDefaultsExitRes();
void InitDefaultsSendMsgReqImpl();
void InitDefaultsSendMsgReq();
void InitDefaultsSendMsgResImpl();
void InitDefaultsSendMsgRes();
void InitDefaultsOnUserLoginImpl();
void InitDefaultsOnUserLogin();
void InitDefaultsOnUserExitImpl();
void InitDefaultsOnUserExit();
void InitDefaultsOnSendMsgImpl();
void InitDefaultsOnSendMsg();
inline void InitDefaults() {
  InitDefaultsLoginRes();
  InitDefaultsExitRes();
  InitDefaultsSendMsgReq();
  InitDefaultsSendMsgRes();
  InitDefaultsOnUserLogin();
  InitDefaultsOnUserExit();
  InitDefaultsOnSendMsg();
}
}  // namespace protobuf_game_2eproto
class ExitRes;
class ExitResDefaultTypeInternal;
extern ExitResDefaultTypeInternal _ExitRes_default_instance_;
class LoginRes;
class LoginResDefaultTypeInternal;
extern LoginResDefaultTypeInternal _LoginRes_default_instance_;
class OnSendMsg;
class OnSendMsgDefaultTypeInternal;
extern OnSendMsgDefaultTypeInternal _OnSendMsg_default_instance_;
class OnUserExit;
class OnUserExitDefaultTypeInternal;
extern OnUserExitDefaultTypeInternal _OnUserExit_default_instance_;
class OnUserLogin;
class OnUserLoginDefaultTypeInternal;
extern OnUserLoginDefaultTypeInternal _OnUserLogin_default_instance_;
class SendMsgReq;
class SendMsgReqDefaultTypeInternal;
extern SendMsgReqDefaultTypeInternal _SendMsgReq_default_instance_;
class SendMsgRes;
class SendMsgResDefaultTypeInternal;
extern SendMsgResDefaultTypeInternal _SendMsgRes_default_instance_;

enum Cmd {
  INVAILD_CMD = 0,
  eLoginReq = 1,
  eLoginRes = 2,
  eExitReq = 3,
  eExitRes = 4,
  eSendMsgReq = 5,
  eSendMsgRes = 6,
  eOnUserLogin = 7,
  eOnUserExit = 8,
  eOnSendMsg = 9
};
bool Cmd_IsValid(int value);
const Cmd Cmd_MIN = INVAILD_CMD;
const Cmd Cmd_MAX = eOnSendMsg;
const int Cmd_ARRAYSIZE = Cmd_MAX + 1;

const ::google::protobuf::EnumDescriptor* Cmd_descriptor();
inline const ::std::string& Cmd_Name(Cmd value) {
  return ::google::protobuf::internal::NameOfEnum(
    Cmd_descriptor(), value);
}
inline bool Cmd_Parse(
    const ::std::string& name, Cmd* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Cmd>(
    Cmd_descriptor(), name, value);
}
// ===================================================================

class LoginRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:LoginRes) */ {
 public:
  LoginRes();
  virtual ~LoginRes();

  LoginRes(const LoginRes& from);

  inline LoginRes& operator=(const LoginRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  LoginRes(LoginRes&& from) noexcept
    : LoginRes() {
    *this = ::std::move(from);
  }

  inline LoginRes& operator=(LoginRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const LoginRes* internal_default_instance() {
    return reinterpret_cast<const LoginRes*>(
               &_LoginRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(LoginRes* other);
  friend void swap(LoginRes& a, LoginRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline LoginRes* New() const PROTOBUF_FINAL { return New(NULL); }

  LoginRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LoginRes& from);
  void MergeFrom(const LoginRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LoginRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:LoginRes)
 private:
  void set_has_status();
  void clear_has_status();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 status_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsLoginResImpl();
};
// -------------------------------------------------------------------

class ExitRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ExitRes) */ {
 public:
  ExitRes();
  virtual ~ExitRes();

  ExitRes(const ExitRes& from);

  inline ExitRes& operator=(const ExitRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ExitRes(ExitRes&& from) noexcept
    : ExitRes() {
    *this = ::std::move(from);
  }

  inline ExitRes& operator=(ExitRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExitRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ExitRes* internal_default_instance() {
    return reinterpret_cast<const ExitRes*>(
               &_ExitRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(ExitRes* other);
  friend void swap(ExitRes& a, ExitRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ExitRes* New() const PROTOBUF_FINAL { return New(NULL); }

  ExitRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExitRes& from);
  void MergeFrom(const ExitRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExitRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:ExitRes)
 private:
  void set_has_status();
  void clear_has_status();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 status_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsExitResImpl();
};
// -------------------------------------------------------------------

class SendMsgReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SendMsgReq) */ {
 public:
  SendMsgReq();
  virtual ~SendMsgReq();

  SendMsgReq(const SendMsgReq& from);

  inline SendMsgReq& operator=(const SendMsgReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SendMsgReq(SendMsgReq&& from) noexcept
    : SendMsgReq() {
    *this = ::std::move(from);
  }

  inline SendMsgReq& operator=(SendMsgReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendMsgReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SendMsgReq* internal_default_instance() {
    return reinterpret_cast<const SendMsgReq*>(
               &_SendMsgReq_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(SendMsgReq* other);
  friend void swap(SendMsgReq& a, SendMsgReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SendMsgReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SendMsgReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SendMsgReq& from);
  void MergeFrom(const SendMsgReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SendMsgReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string content = 1;
  bool has_content() const;
  void clear_content();
  static const int kContentFieldNumber = 1;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // @@protoc_insertion_point(class_scope:SendMsgReq)
 private:
  void set_has_content();
  void clear_has_content();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsSendMsgReqImpl();
};
// -------------------------------------------------------------------

class SendMsgRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:SendMsgRes) */ {
 public:
  SendMsgRes();
  virtual ~SendMsgRes();

  SendMsgRes(const SendMsgRes& from);

  inline SendMsgRes& operator=(const SendMsgRes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  SendMsgRes(SendMsgRes&& from) noexcept
    : SendMsgRes() {
    *this = ::std::move(from);
  }

  inline SendMsgRes& operator=(SendMsgRes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SendMsgRes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SendMsgRes* internal_default_instance() {
    return reinterpret_cast<const SendMsgRes*>(
               &_SendMsgRes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(SendMsgRes* other);
  friend void swap(SendMsgRes& a, SendMsgRes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline SendMsgRes* New() const PROTOBUF_FINAL { return New(NULL); }

  SendMsgRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SendMsgRes& from);
  void MergeFrom(const SendMsgRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SendMsgRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 status = 1;
  bool has_status() const;
  void clear_status();
  static const int kStatusFieldNumber = 1;
  ::google::protobuf::int32 status() const;
  void set_status(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:SendMsgRes)
 private:
  void set_has_status();
  void clear_has_status();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::int32 status_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsSendMsgResImpl();
};
// -------------------------------------------------------------------

class OnUserLogin : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OnUserLogin) */ {
 public:
  OnUserLogin();
  virtual ~OnUserLogin();

  OnUserLogin(const OnUserLogin& from);

  inline OnUserLogin& operator=(const OnUserLogin& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OnUserLogin(OnUserLogin&& from) noexcept
    : OnUserLogin() {
    *this = ::std::move(from);
  }

  inline OnUserLogin& operator=(OnUserLogin&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OnUserLogin& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OnUserLogin* internal_default_instance() {
    return reinterpret_cast<const OnUserLogin*>(
               &_OnUserLogin_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(OnUserLogin* other);
  friend void swap(OnUserLogin& a, OnUserLogin& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OnUserLogin* New() const PROTOBUF_FINAL { return New(NULL); }

  OnUserLogin* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OnUserLogin& from);
  void MergeFrom(const OnUserLogin& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OnUserLogin* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string ip = 1;
  bool has_ip() const;
  void clear_ip();
  static const int kIpFieldNumber = 1;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // required int32 port = 2;
  bool has_port() const;
  void clear_port();
  static const int kPortFieldNumber = 2;
  ::google::protobuf::int32 port() const;
  void set_port(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:OnUserLogin)
 private:
  void set_has_ip();
  void clear_has_ip();
  void set_has_port();
  void clear_has_port();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::int32 port_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsOnUserLoginImpl();
};
// -------------------------------------------------------------------

class OnUserExit : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OnUserExit) */ {
 public:
  OnUserExit();
  virtual ~OnUserExit();

  OnUserExit(const OnUserExit& from);

  inline OnUserExit& operator=(const OnUserExit& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OnUserExit(OnUserExit&& from) noexcept
    : OnUserExit() {
    *this = ::std::move(from);
  }

  inline OnUserExit& operator=(OnUserExit&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OnUserExit& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OnUserExit* internal_default_instance() {
    return reinterpret_cast<const OnUserExit*>(
               &_OnUserExit_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(OnUserExit* other);
  friend void swap(OnUserExit& a, OnUserExit& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OnUserExit* New() const PROTOBUF_FINAL { return New(NULL); }

  OnUserExit* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OnUserExit& from);
  void MergeFrom(const OnUserExit& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OnUserExit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string ip = 1;
  bool has_ip() const;
  void clear_ip();
  static const int kIpFieldNumber = 1;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // required int32 port = 2;
  bool has_port() const;
  void clear_port();
  static const int kPortFieldNumber = 2;
  ::google::protobuf::int32 port() const;
  void set_port(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:OnUserExit)
 private:
  void set_has_ip();
  void clear_has_ip();
  void set_has_port();
  void clear_has_port();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::int32 port_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsOnUserExitImpl();
};
// -------------------------------------------------------------------

class OnSendMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:OnSendMsg) */ {
 public:
  OnSendMsg();
  virtual ~OnSendMsg();

  OnSendMsg(const OnSendMsg& from);

  inline OnSendMsg& operator=(const OnSendMsg& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OnSendMsg(OnSendMsg&& from) noexcept
    : OnSendMsg() {
    *this = ::std::move(from);
  }

  inline OnSendMsg& operator=(OnSendMsg&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OnSendMsg& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OnSendMsg* internal_default_instance() {
    return reinterpret_cast<const OnSendMsg*>(
               &_OnSendMsg_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(OnSendMsg* other);
  friend void swap(OnSendMsg& a, OnSendMsg& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OnSendMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  OnSendMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OnSendMsg& from);
  void MergeFrom(const OnSendMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OnSendMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string ip = 1;
  bool has_ip() const;
  void clear_ip();
  static const int kIpFieldNumber = 1;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // required string content = 3;
  bool has_content() const;
  void clear_content();
  static const int kContentFieldNumber = 3;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const char* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // required int32 port = 2;
  bool has_port() const;
  void clear_port();
  static const int kPortFieldNumber = 2;
  ::google::protobuf::int32 port() const;
  void set_port(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:OnSendMsg)
 private:
  void set_has_ip();
  void clear_has_ip();
  void set_has_port();
  void clear_has_port();
  void set_has_content();
  void clear_has_content();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::int32 port_;
  friend struct ::protobuf_game_2eproto::TableStruct;
  friend void ::protobuf_game_2eproto::InitDefaultsOnSendMsgImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// LoginRes

// required int32 status = 1;
inline bool LoginRes::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginRes::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginRes::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginRes::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 LoginRes::status() const {
  // @@protoc_insertion_point(field_get:LoginRes.status)
  return status_;
}
inline void LoginRes::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:LoginRes.status)
}

// -------------------------------------------------------------------

// ExitRes

// required int32 status = 1;
inline bool ExitRes::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExitRes::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExitRes::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExitRes::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 ExitRes::status() const {
  // @@protoc_insertion_point(field_get:ExitRes.status)
  return status_;
}
inline void ExitRes::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:ExitRes.status)
}

// -------------------------------------------------------------------

// SendMsgReq

// required string content = 1;
inline bool SendMsgReq::has_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendMsgReq::set_has_content() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendMsgReq::clear_has_content() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendMsgReq::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
inline const ::std::string& SendMsgReq::content() const {
  // @@protoc_insertion_point(field_get:SendMsgReq.content)
  return content_.GetNoArena();
}
inline void SendMsgReq::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:SendMsgReq.content)
}
#if LANG_CXX11
inline void SendMsgReq::set_content(::std::string&& value) {
  set_has_content();
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:SendMsgReq.content)
}
#endif
inline void SendMsgReq::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:SendMsgReq.content)
}
inline void SendMsgReq::set_content(const char* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:SendMsgReq.content)
}
inline ::std::string* SendMsgReq::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:SendMsgReq.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SendMsgReq::release_content() {
  // @@protoc_insertion_point(field_release:SendMsgReq.content)
  clear_has_content();
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SendMsgReq::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:SendMsgReq.content)
}

// -------------------------------------------------------------------

// SendMsgRes

// required int32 status = 1;
inline bool SendMsgRes::has_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SendMsgRes::set_has_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SendMsgRes::clear_has_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SendMsgRes::clear_status() {
  status_ = 0;
  clear_has_status();
}
inline ::google::protobuf::int32 SendMsgRes::status() const {
  // @@protoc_insertion_point(field_get:SendMsgRes.status)
  return status_;
}
inline void SendMsgRes::set_status(::google::protobuf::int32 value) {
  set_has_status();
  status_ = value;
  // @@protoc_insertion_point(field_set:SendMsgRes.status)
}

// -------------------------------------------------------------------

// OnUserLogin

// required string ip = 1;
inline bool OnUserLogin::has_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OnUserLogin::set_has_ip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OnUserLogin::clear_has_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OnUserLogin::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip();
}
inline const ::std::string& OnUserLogin::ip() const {
  // @@protoc_insertion_point(field_get:OnUserLogin.ip)
  return ip_.GetNoArena();
}
inline void OnUserLogin::set_ip(const ::std::string& value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OnUserLogin.ip)
}
#if LANG_CXX11
inline void OnUserLogin::set_ip(::std::string&& value) {
  set_has_ip();
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:OnUserLogin.ip)
}
#endif
inline void OnUserLogin::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OnUserLogin.ip)
}
inline void OnUserLogin::set_ip(const char* value, size_t size) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OnUserLogin.ip)
}
inline ::std::string* OnUserLogin::mutable_ip() {
  set_has_ip();
  // @@protoc_insertion_point(field_mutable:OnUserLogin.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OnUserLogin::release_ip() {
  // @@protoc_insertion_point(field_release:OnUserLogin.ip)
  clear_has_ip();
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OnUserLogin::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    set_has_ip();
  } else {
    clear_has_ip();
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:OnUserLogin.ip)
}

// required int32 port = 2;
inline bool OnUserLogin::has_port() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OnUserLogin::set_has_port() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OnUserLogin::clear_has_port() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OnUserLogin::clear_port() {
  port_ = 0;
  clear_has_port();
}
inline ::google::protobuf::int32 OnUserLogin::port() const {
  // @@protoc_insertion_point(field_get:OnUserLogin.port)
  return port_;
}
inline void OnUserLogin::set_port(::google::protobuf::int32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:OnUserLogin.port)
}

// -------------------------------------------------------------------

// OnUserExit

// required string ip = 1;
inline bool OnUserExit::has_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OnUserExit::set_has_ip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OnUserExit::clear_has_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OnUserExit::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip();
}
inline const ::std::string& OnUserExit::ip() const {
  // @@protoc_insertion_point(field_get:OnUserExit.ip)
  return ip_.GetNoArena();
}
inline void OnUserExit::set_ip(const ::std::string& value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OnUserExit.ip)
}
#if LANG_CXX11
inline void OnUserExit::set_ip(::std::string&& value) {
  set_has_ip();
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:OnUserExit.ip)
}
#endif
inline void OnUserExit::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OnUserExit.ip)
}
inline void OnUserExit::set_ip(const char* value, size_t size) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OnUserExit.ip)
}
inline ::std::string* OnUserExit::mutable_ip() {
  set_has_ip();
  // @@protoc_insertion_point(field_mutable:OnUserExit.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OnUserExit::release_ip() {
  // @@protoc_insertion_point(field_release:OnUserExit.ip)
  clear_has_ip();
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OnUserExit::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    set_has_ip();
  } else {
    clear_has_ip();
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:OnUserExit.ip)
}

// required int32 port = 2;
inline bool OnUserExit::has_port() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OnUserExit::set_has_port() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OnUserExit::clear_has_port() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OnUserExit::clear_port() {
  port_ = 0;
  clear_has_port();
}
inline ::google::protobuf::int32 OnUserExit::port() const {
  // @@protoc_insertion_point(field_get:OnUserExit.port)
  return port_;
}
inline void OnUserExit::set_port(::google::protobuf::int32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:OnUserExit.port)
}

// -------------------------------------------------------------------

// OnSendMsg

// required string ip = 1;
inline bool OnSendMsg::has_ip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OnSendMsg::set_has_ip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OnSendMsg::clear_has_ip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OnSendMsg::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ip();
}
inline const ::std::string& OnSendMsg::ip() const {
  // @@protoc_insertion_point(field_get:OnSendMsg.ip)
  return ip_.GetNoArena();
}
inline void OnSendMsg::set_ip(const ::std::string& value) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OnSendMsg.ip)
}
#if LANG_CXX11
inline void OnSendMsg::set_ip(::std::string&& value) {
  set_has_ip();
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:OnSendMsg.ip)
}
#endif
inline void OnSendMsg::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OnSendMsg.ip)
}
inline void OnSendMsg::set_ip(const char* value, size_t size) {
  set_has_ip();
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OnSendMsg.ip)
}
inline ::std::string* OnSendMsg::mutable_ip() {
  set_has_ip();
  // @@protoc_insertion_point(field_mutable:OnSendMsg.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OnSendMsg::release_ip() {
  // @@protoc_insertion_point(field_release:OnSendMsg.ip)
  clear_has_ip();
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OnSendMsg::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    set_has_ip();
  } else {
    clear_has_ip();
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:OnSendMsg.ip)
}

// required int32 port = 2;
inline bool OnSendMsg::has_port() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OnSendMsg::set_has_port() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OnSendMsg::clear_has_port() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OnSendMsg::clear_port() {
  port_ = 0;
  clear_has_port();
}
inline ::google::protobuf::int32 OnSendMsg::port() const {
  // @@protoc_insertion_point(field_get:OnSendMsg.port)
  return port_;
}
inline void OnSendMsg::set_port(::google::protobuf::int32 value) {
  set_has_port();
  port_ = value;
  // @@protoc_insertion_point(field_set:OnSendMsg.port)
}

// required string content = 3;
inline bool OnSendMsg::has_content() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OnSendMsg::set_has_content() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OnSendMsg::clear_has_content() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OnSendMsg::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
inline const ::std::string& OnSendMsg::content() const {
  // @@protoc_insertion_point(field_get:OnSendMsg.content)
  return content_.GetNoArena();
}
inline void OnSendMsg::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:OnSendMsg.content)
}
#if LANG_CXX11
inline void OnSendMsg::set_content(::std::string&& value) {
  set_has_content();
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:OnSendMsg.content)
}
#endif
inline void OnSendMsg::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:OnSendMsg.content)
}
inline void OnSendMsg::set_content(const char* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:OnSendMsg.content)
}
inline ::std::string* OnSendMsg::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:OnSendMsg.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OnSendMsg::release_content() {
  // @@protoc_insertion_point(field_release:OnSendMsg.content)
  clear_has_content();
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OnSendMsg::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:OnSendMsg.content)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::Cmd> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Cmd>() {
  return ::Cmd_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_game_2eproto__INCLUDED
